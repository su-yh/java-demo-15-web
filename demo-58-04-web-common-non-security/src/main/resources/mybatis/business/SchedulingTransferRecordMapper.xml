<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eb.mp.mysql.mapper.business.SchedulingTransferRecordMapper">

    <resultMap type="com.eb.mp.mysql.entity.custom.dates.IntegerDatesStatisticEntity"
               id="IntegerDatesStatisticEntity">
        <result column="dates" jdbcType="INTEGER" property="dates" javaType="java.lang.Integer"/>
        <result column="statistic" jdbcType="INTEGER" property="statistic" javaType="java.lang.Integer"/>
    </resultMap>

    <resultMap type="com.eb.mp.mysql.entity.custom.dates.LongDatesStatisticEntity"
               id="LongDatesStatisticEntity">
        <result column="dates" jdbcType="INTEGER" property="dates" javaType="java.lang.Integer"/>
        <result column="statistic" jdbcType="BIGINT" property="statistic" javaType="java.lang.Long"/>
    </resultMap>

    <resultMap type="com.eb.mp.mysql.entity.custom.dates.BigDecimalDatesStatisticEntity"
               id="BigDecimalDatesStatisticEntity">
        <result column="dates" jdbcType="INTEGER" property="dates" javaType="java.lang.Integer"/>
        <result column="statistic" jdbcType="NUMERIC" property="statistic" javaType="java.math.BigDecimal"/>
    </resultMap>

    <resultMap type="com.eb.business.dto.exceptionorder.rsp.ExceptionOrderStatisticByUserRspDto"
               id="ExceptionOrderStatisticByUserRspDto">
        <result column="dates" jdbcType="INTEGER" property="dates" javaType="java.lang.Integer"/>
        <result column="audit_user_nick" jdbcType="VARCHAR" property="userNickName" javaType="java.lang.String"/>
        <result column="exception_order_count" jdbcType="NUMERIC" property="exceptionOrderCount" javaType="java.lang.Integer"/>
        <result column="audit_success_order_count" jdbcType="NUMERIC" property="auditSuccessOrderCount" javaType="java.lang.Integer"/>
    </resultMap>

    <resultMap type="com.eb.business.dto.exceptionorder.rsp.ExceptionOrderStatisticByMchntNoRspDto"
               id="ExceptionOrderStatisticByMchntNoRspDto">
        <result column="dates" jdbcType="INTEGER" property="dates" javaType="java.lang.Integer"/>
        <result column="pn" jdbcType="VARCHAR" property="mchntNo" javaType="java.lang.String"/>
        <result column="exception_order_count" jdbcType="NUMERIC" property="exceptionOrderCount" javaType="java.lang.Integer"/>
        <result column="audit_success_order_count" jdbcType="NUMERIC" property="auditSuccessOrderCount" javaType="java.lang.Integer"/>
    </resultMap>

    <select id="orderTotalNumberByDates" resultMap="IntegerDatesStatisticEntity">
        select dates, count(1) as statistic
        from scheduling_transfer_record
        <where>
            <if test="datesStart != null">
                and dates &gt;= #{datesStart}
            </if>
            <if test="datesLast != null">
                and dates &lt;= #{datesLast}
            </if>
            <if test="mchntNo != null">
                and pn = #{mchntNo}
            </if>
        </where>
        group by dates
    </select>

    <select id="orderStatusNumberByDates" resultMap="IntegerDatesStatisticEntity">
        select dates, count(1) as statistic
        from scheduling_transfer_record
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="mchntNo != null">
                and pn = #{mchntNo}
            </if>
            <if test="datesStart != null">
                and dates &gt;= #{datesStart}
            </if>
            <if test="datesLast != null">
                and dates &lt;= #{datesLast}
            </if>
        </where>
        group by dates
    </select>

    <select id="orderTotalAmountByDates" resultMap="BigDecimalDatesStatisticEntity">
        select dates, SUM(real_amount) as statistic from scheduling_transfer_record
        <where>
            <if test="mchntNo != null">
                and pn = #{mchntNo}
            </if>
            <if test="datesStart != null">
                and dates &gt;= #{datesStart}
            </if>
            <if test="datesLast != null">
                and dates &lt;= #{datesLast}
            </if>
        </where>
        group by dates
    </select>

    <select id="msTotalByDates" resultMap="LongDatesStatisticEntity">
        select dates, SUM(mtime - created) as statistic
        from scheduling_transfer_record
        <where>
            <if test="mchntNo != null">
                and pn = #{mchntNo}
            </if>
            <if test="datesStart != null">
                and dates &gt;= #{datesStart}
            </if>
            <if test="datesLast != null">
                and dates &lt;= #{datesLast}
            </if>
            <if test="true">
                and created is not null and mtime is not NULL
            </if>
        </where>
        group by dates
    </select>

    <sql id="selectExceptionOrderStatisticByNickName">
        select a.dates, a.audit_user_nick,
               a.statistic as exception_order_count,
               b.statistic as audit_success_order_count
        from (
            select dates, audit_user_nick, count(1) as statistic
            from scheduling_transfer_record
            <where>
                <if test="true">
                    and order_audit_status != ${orderAuditStatusNormal}
                </if>
                <if test="${auditUserNickLike} != null">
                    and lower(audit_user_nick) like lower(concat('%', #{${auditUserNickLike}}, '%'))
                </if>
            </where>
            group by dates, audit_user_nick
        ) a
         left join (
            select dates, audit_user_nick, count(1) as statistic
            from scheduling_transfer_record
            where order_audit_status = ${orderAuditStatusSuccess}
            group by dates, audit_user_nick
        ) b
        on a.dates = b.dates and a.audit_user_nick = b.audit_user_nick
    </sql>

    <select id="listExceptionOrderStatisticCountByNickNameCountXml" resultType="java.lang.Long">
        select count(1) cnt
        from (
        <include refid="selectExceptionOrderStatisticByNickName">
            <property name="auditUserNickLike" value="nickNameLike"/>
            <property name="orderAuditStatusNormal" value="#{orderAuditStatusNormal}" />
            <property name="orderAuditStatusSuccess" value="#{orderAuditStatusSuccess}"/>
        </include>
        ) t
    </select>

    <select id="listExceptionOrderStatisticCountByNickNameXml"
            resultMap="ExceptionOrderStatisticByUserRspDto">
        <include refid="selectExceptionOrderStatisticByNickName">
            <property name="auditUserNickLike" value="nickNameLike"/>
            <property name="orderAuditStatusNormal" value="#{orderAuditStatusNormal}" />
            <property name="orderAuditStatusSuccess" value="#{orderAuditStatusSuccess}"/>
        </include>
        limit #{pageStart}, #{pageSize}
    </select>

    <sql id="selectExceptionOrderStatisticByMchnt">
        select a.dates, a.pn,
            a.statistic as exception_order_count,
            b.statistic as audit_success_order_count
        from (
            select dates, pn, count(1) as statistic
            from scheduling_transfer_record
            <where>
                <if test="true">
                    and order_audit_status != ${orderAuditStatusNormal}
                </if>
                <if test="${pnLike} != null">
                    and lower(pn) like lower(concat('%', #{${pnLike}}, '%'))
                </if>
            </where>
            group by dates, pn
        ) a
        left join (
            select dates, pn, count(1) as statistic
            from scheduling_transfer_record
            where order_audit_status = ${orderAuditStatusSuccess}
            group by dates, pn
        ) b
        on a.dates = b.dates and a.pn = b.pn
    </sql>

    <select id="listExceptionOrderStatisticCountByMchntCountXml" resultType="java.lang.Long">
        select count(1) cnt
        from (
        <include refid="selectExceptionOrderStatisticByMchnt">
            <property name="pnLike" value="mchntNoLike"/>
            <property name="orderAuditStatusNormal" value="#{orderAuditStatusNormal}" />
            <property name="orderAuditStatusSuccess" value="#{orderAuditStatusSuccess}"/>
        </include>
        ) t
    </select>

    <select id="listExceptionOrderStatisticCountByMchntXml"
            resultMap="ExceptionOrderStatisticByMchntNoRspDto">
        <include refid="selectExceptionOrderStatisticByMchnt">
            <property name="pnLike" value="mchntNoLike"/>
            <property name="orderAuditStatusNormal" value="#{orderAuditStatusNormal}" />
            <property name="orderAuditStatusSuccess" value="#{orderAuditStatusSuccess}"/>
        </include>
        limit #{pageStart}, #{pageSize}
    </select>

</mapper>