<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eb.mp.mysql.mapper.custom.VipMapper">

    <resultMap type="com.eb.business.dto.vip.rsp.VipAccountRspDto" id="VipAccountRspDto">
        <result column="id" jdbcType="BIGINT" property="id" javaType="java.lang.Long" />
        <result column="pnum" jdbcType="VARCHAR" property="pnum" javaType="java.lang.String" />
        <result column="code" jdbcType="VARCHAR" property="code" javaType="java.lang.String" />
        <result column="financial_category" jdbcType="VARCHAR" property="financialCategory" javaType="com.eb.constant.enums.FinancialCategoryEnums" typeHandler="com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler" />
        <result column="financial_account" jdbcType="VARCHAR" property="financialAccount" javaType="java.lang.String" />
        <result column="bank_account" jdbcType="VARCHAR" property="bankAccountName" javaType="java.lang.String" />
        <result column="bank_swift" jdbcType="VARCHAR" property="swiftCode" javaType="java.lang.String" />
        <result column="enable" jdbcType="BIT" property="enable" javaType="com.eb.constant.enums.EnableStatusEnums" />
        <result column="review" jdbcType="BIT" property="review" javaType="com.eb.constant.enums.ReviewStatusEnums" />
        <result column="created" jdbcType="TIMESTAMP" property="created" javaType="java.util.Date" />
        <result column="updated" jdbcType="TIMESTAMP" property="updated" javaType="java.util.Date" />
    </resultMap>

    <sql id="columns">
        ${tab}.id as id, ${tab}.pnum as pnum, ${tab}.code as code, "${category}" AS financial_category,
        ${tab}.${financialAccountColumnName} as financial_account, ${tab}.enable as enable,
        ${tab}.review as review,
        ${tab}.created as created, ${tab}.updated as updated
    </sql>

    <sql id="whereConditional">
        <where>
            <if test="${queryParam}.code != null">
                and code = #{${queryParam}.code}
            </if>
            <if test="${queryParam}.pnumLike != null">
                and lower(pnum) like lower(concat('%', #{${queryParam}.pnumLike}, '%'))
            </if>
            <if test="${queryParam}.codeLike != null">
                and lower(code) like lower(concat('%', #{${queryParam}.codeLike}, '%'))
            </if>
            <if test="${queryParam}.financialAccountLike != null">
                and lower(${tab}.${financialAccountColumnName}) like lower(concat('%', #{${queryParam}.financialAccountLike}, '%'))
            </if>
        </where>
    </sql>

    <sql id="queryByConditional">
        select
        null as bank_account, null as bank_swift,
        <include refid="columns">
            <property name="tab" value="tpp"/>
            <property name="category" value="TPP"/>
            <property name="financialAccountColumnName" value="tpp"/>
        </include>
        from vip_tpp tpp
        <if test="queryDto != null">
            <include refid="whereConditional">
                <property name="queryParam" value="queryDto"/>
                <property name="tab" value="tpp"/>
                <property name="financialAccountColumnName" value="tpp"/>
            </include>
        </if>
        union all
        select
        account as bank_account, swift as bank_swift,
        <include refid="columns">
            <property name="tab" value="bank"/>
            <property name="category" value="BANK"/>
            <property name="financialAccountColumnName" value="card_no"/>
        </include>
        from vip_bank_account bank
        <if test="queryDto != null">
            <include refid="whereConditional">
                <property name="queryParam" value="queryDto"/>
                <property name="tab" value="bank"/>
                <property name="financialAccountColumnName" value="card_no"/>
            </include>
        </if>
    </sql>

    <select id="pageQueryByConditionalCount" resultType="long">
        select count(1) cnt
        from (<include refid="queryByConditional"/>) t
    </select>

    <select id="pageQueryByConditional" resultMap="VipAccountRspDto">
        <include refid="queryByConditional"/>
        order by created desc
        limit #{pageStart}, #{pageSize}
    </select>

    <select id="listQueryByConditional" resultMap="VipAccountRspDto">
        <include refid="queryByConditional"/>
        order by financial_category, created desc
    </select>


</mapper>