<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eb.mp.mysql.mapper.custom.ExceptionOrderMapper">

    <resultMap id="ExceptionOrderEntity" type="com.eb.mp.mysql.entity.custom.ExceptionOrderEntity">
        <id column="id" jdbcType="BIGINT" property="id" javaType="java.lang.Long"/>
        <result column="pn" jdbcType="VARCHAR" property="pn" javaType="java.lang.String"/>
        <result column="buyer_uid" jdbcType="VARCHAR" property="buyerUid" javaType="java.lang.String"/>
        <result column="pnum" jdbcType="VARCHAR" property="pnum" javaType="java.lang.String"/>
        <result column="type" jdbcType="TINYINT" property="type" javaType="com.eb.constant.enums.AuditRecordTypeEnums" typeHandler="com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler"/>
        <result column="cp_order" jdbcType="VARCHAR" property="cpOrder" javaType="java.lang.String"/>
        <result column="cp_order_revise" jdbcType="VARCHAR" property="cpOrderRevise" javaType="java.lang.String"/>
        <result column="amount" jdbcType="DECIMAL" property="amount" javaType="java.math.BigDecimal"/>
        <result column="svip_order_no" jdbcType="VARCHAR" property="svipOrderNo" javaType="java.lang.String"/>
        <result column="utr" jdbcType="VARCHAR" property="utr" javaType="java.lang.String"/>
        <result column="pay_screenshot_url" jdbcType="VARCHAR" property="payScreenshotUrl" javaType="java.lang.String"/>
        <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" javaType="java.math.BigDecimal"/>
        <result column="hit" jdbcType="TINYINT" property="hit" javaType="com.eb.constant.enums.OrderMatchStatusEnums" typeHandler="com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler"/>
        <result column="dates" jdbcType="INTEGER" property="dates" javaType="java.lang.Integer"/>
        <result column="created" jdbcType="TIMESTAMP" property="created" javaType="java.util.Date"/>
        <result column="updated" jdbcType="TIMESTAMP" property="updated" javaType="java.util.Date"/>

        <result column="order_id" jdbcType="BIGINT" property="orderId" javaType="java.lang.Long" />
        <result column="code" jdbcType="VARCHAR" property="code" javaType="java.lang.String" />
        <result column="order_audit_status" jdbcType="TINYINT" property="orderAuditStatus" javaType="com.eb.constant.enums.OrderAuditStatusEnums" typeHandler="com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler"/>
        <result column="status" jdbcType="TINYINT" property="status" javaType="com.eb.constant.enums.TransferStatusEnums" typeHandler="com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler"/>
        <result column="pay_type" jdbcType="TINYINT" property="payType" javaType="com.eb.constant.enums.PayTypeEnums" typeHandler="com.baomidou.mybatisplus.core.handlers.MybatisEnumTypeHandler"/>
        <result column="tpp" jdbcType="VARCHAR" property="tpp" javaType="java.lang.String" />
        <result column="card_no" jdbcType="VARCHAR" property="cardNo" javaType="java.lang.String" />
    </resultMap>

    <sql id="listSelect">
        select
            ${alias_utr_upload_record}.id as id,
            ${alias_utr_upload_record}.pn AS pn,
            ${alias_utr_upload_record}.buyer_uid as buyer_uid,
            ${alias_utr_upload_record}.pnum as pnum,
            ${alias_utr_upload_record}.type as type,
            ${alias_utr_upload_record}.cp_order as cp_order,
            ${alias_utr_upload_record}.cp_order_revise as cp_order_revise,
            ${alias_utr_upload_record}.amount as amount,
            ${alias_utr_upload_record}.svip_order_no as svip_order_no,
            ${alias_utr_upload_record}.utr as utr,
            ${alias_utr_upload_record}.pay_screenshot_url as pay_screenshot_url,
            ${alias_utr_upload_record}.pay_amount as pay_amount,
            ${alias_utr_upload_record}.hit as hit,
            ${alias_utr_upload_record}.dates as dates,
            ${alias_utr_upload_record}.created as created,
            ${alias_utr_upload_record}.updated as updated,
            ${alias_scheduling_transfer_record}.id as order_id,
            ${alias_scheduling_transfer_record}.status as status,
            ${alias_scheduling_transfer_record}.order_audit_status as order_audit_status,
            ${alias_scheduling_transfer_record}.code as code,
            ${alias_scheduling_transfer_record}.tpp as tpp,
            ${alias_scheduling_transfer_record}.pay_type as pay_type,
            ${alias_scheduling_transfer_record}.card_no as card_no
        from utr_upload_record ${alias_utr_upload_record}
        left join scheduling_transfer_record ${alias_scheduling_transfer_record}
        on ${alias_utr_upload_record}.cp_order = ${alias_scheduling_transfer_record}.cp_order
               or ${alias_utr_upload_record}.cp_order_revise = ${alias_scheduling_transfer_record}.cp_order
        <where>
            <if test="${queryReqDto}.datesStart != null">
                and ${alias_utr_upload_record}.dates &gt;= #{${queryReqDto}.datesStart}
            </if>
            <if test="${queryReqDto}.datesLast != null">
                and ${alias_utr_upload_record}.dates &lt;= #{${queryReqDto}.datesLast}
            </if>
            <if test="${queryReqDto}.mchntNoLike != null">
                and lower(${alias_utr_upload_record}.pn) like lower(concat('%', #{${queryReqDto}.mchntNoLike}, '%'))
            </if>
            <if test="${queryReqDto}.cpOrderLike != null">
                and lower(${alias_utr_upload_record}.cp_order) like lower(concat('%', #{${queryReqDto}.cpOrderLike}, '%'))
            </if>
            <if test="${queryReqDto}.pnumLike != null">
                and lower(${alias_utr_upload_record}.pnum) like lower(concat('%', #{${queryReqDto}.pnumLike}, '%'))
            </if>
            <if test="${queryReqDto}.buyerUidLike != null">
                and lower(${alias_utr_upload_record}.buyer_uid) like lower(concat('%', #{${queryReqDto}.buyerUidLike}, '%'))
            </if>
            <if test="${queryReqDto}.amountLowerBound != null">
                and amount &gt;= #{${queryReqDto}.amountLowerBound}
            </if>
            <if test="${queryReqDto}.amountUpperBound != null">
                and amount &lt;= #{${queryReqDto}.amountUpperBound}
            </if>
            <if test="${queryReqDto}.utrLike != null">
                and lower(${alias_utr_upload_record}.utr) like lower(concat('%', #{${queryReqDto}.utrLike}, '%'))
            </if>
            <if test="${queryReqDto}.codeLike != null">
                and lower(${alias_scheduling_transfer_record}.code) like lower(concat('%', #{${queryReqDto}.codeLike}, '%'))
            </if>
            <if test="${queryReqDto}.financialAccountLike != null">
                and (${alias_scheduling_transfer_record}.tpp like #{${queryReqDto}.financialAccountLike} or ${alias_scheduling_transfer_record}.card_no like #{${queryReqDto}.financialAccountLike})
            </if>
        </where>
    </sql>

    <select id="listPageUtrRecordCount" resultType="java.lang.Long">
        select count(1) cnt
        from (
        <include refid="listSelect">
            <property name="queryReqDto" value="queryReqDto"/>
            <property name="alias_utr_upload_record" value="a"/>
            <property name="alias_scheduling_transfer_record" value="b"/>
        </include>
        ) t
    </select>

    <select id="listPageUtrRecord" resultMap="ExceptionOrderEntity">
        <include refid="listSelect">
            <property name="queryReqDto" value="queryReqDto"/>
            <property name="alias_utr_upload_record" value="a"/>
            <property name="alias_scheduling_transfer_record" value="b"/>
        </include>
        order by a.created desc
        limit #{pageStart}, #{pageSize}
    </select>

    <select id="listUtrRecord" resultMap="ExceptionOrderEntity">
        <include refid="listSelect">
            <property name="queryReqDto" value="queryReqDto"/>
            <property name="alias_utr_upload_record" value="a"/>
            <property name="alias_scheduling_transfer_record" value="b"/>
        </include>
        order by a.dates desc, b.code, a.cp_order
    </select>

</mapper>